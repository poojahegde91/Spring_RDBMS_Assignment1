Question 1: Create the tables for User, Circle, User_Circle, Messages and User_Inbox (to be created with help of Triggers)
( All the above-mentioned tables has to be created based on the Data Model Video).
----------------------------------------------------------------------------------------------------------
Answers:
---------------------------------------
create database messageappDB;

use messageappDB;
---------------------------------------------------------------------------------------------
create table user(
user_id varchar(45) not null, 
user_name varchar(45) not null, 
password varchar(20) not null, 
mobile_number varchar(45) null, 
date_of_registration datetime not null default current_timestamp, 
last_seen datetime not null default current_timestamp, 
on_line char(1) not null check (on_line = 'Y' OR on_line = 'N'),  
primary key (user_id)
);
----------------------------------------------------------------------------------------------
create table circle(
circle_id int(10) not null AUTO_INCREMENT,
circle_name varchar(20) not null,
description varchar(50) not null,
created_by varchar(45) not null,
date_of_creation datetime not null default current_timestamp,
primary key (circle_id),
foreign key (created_by) references user(user_id)
);
--------------------------------------------------------------------------------------------
create table user_circle(
id int(10) not null AUTO_INCREMENT,
user_id varchar(45) not null,
circle_id int(10) not null,
date_of_joining datetime not null default current_timestamp,
status varchar(20) not null check (status = 'Accepted' OR status = 'Rejected'),
primary key (id),
foreign key (user_id) references user(user_id),
foreign key (circle_id) references circle(circle_id)
);
------------------------------------------------------------------------------------------------------
create table message(
message_id int(10) not null AUTO_INCREMENT,
sender_id varchar(45) not null,
receiver_id varchar(45) not null,
circle_id int(10) not null,
posted_date datetime not null default current_timestamp,
messages varchar(250) not null,
message_type char(1) not null default 'T' check(message_type = 'I' OR message_type = 'V' OR message_type = 'T'),
primary key (message_id),
foreign key (sender_id) references user(user_id),
foreign key (receiver_id) references user(user_id),
foreign key (circle_id) references circle(circle_id)
);
-----------------------------------------------------------------------------------------------------------------------
create table user_inbox(
message_id int(10) not null AUTO_INCREMENT,
sender_id varchar(45) not null,
receiver_id varchar(45) not null,
circle_id int(10) not null,
posted_date datetime not null default current_timestamp,
messages varchar(250) not null,
message_type char(1) not null default 'T' check(message_type = 'I' OR message_type = 'V' OR message_type = 'T'),
read_status char(1) not null default 'F' check (read_status = 'T' OR read_status = 'F'),
primary key (message_id),
foreign key (sender_id) references user(user_id),
foreign key (receiver_id) references user(user_id),
foreign key (circle_id) references circle(circle_id)
);
---------------------------------------------------------------------------------------------------------------------
delimiter #
create trigger message_after_insert
After insert on message
for each row
begin
	insert into messageappDB.user_inbox(message_id,sender_id,receiver_id,circle_id,posted_date,messages,message_type)
    values (new.message_id,new.sender_id,new.receiver_id,new.circle_id,new.posted_date,new.messages,new.message_type);
end #  
------------------------------------------------------------------------------------------------------------------------

************************************************************************************************************************
Question 2: Insert the rows into the created tables (User, Circle, User_Circle, and Messages).

-------------------------------------------------------------------------------
Answers:
------------
use messageappDB;

insert into messageappDB.user (user_id,user_name,password,mobile_number,on_line)
values('pooja@gmail.com','PoojaHegde', 'pooh123', '1234567891', 'Y');

insert into messageappDB.user (user_id,user_name,password,mobile_number,on_line)
values('shan@gmail.com','shanK', 'shank123', '1234567892', 'N');

insert into messageappDB.user (user_id,user_name,password,mobile_number,on_line)
values('rani@gmail.com','raniS', 'srani123', '1234567893', 'Y');

insert into messageappDB.user (user_id,user_name,password,mobile_number,on_line)
values('sanvi@gmail.com','sanviP', 'savp123', '1234567894', 'N');

insert into messageappDB.user (user_id,user_name,password,mobile_number,on_line)
values('vivek@gmail.com','vivekM', 'viv123', '1234567895', 'N');

select * from user;
-------------------------------------------------------------

insert into messageappDB.circle (circle_name,description,created_by)
values('team girls', 'Gang of Girls', 'vivek@gmail.com');

insert into messageappDB.circle (circle_name,description,created_by)
values('gangs', 'trip together', 'sanvi@gmail.com');

insert into messageappDB.circle (circle_name,description,created_by)
values('holidays', 'plan and trip', 'sanvi@gmail.com');

insert into messageappDB.circle (circle_name,description,created_by)
values('carpooling', 'car pooling and save nature', 'pooja@gmail.com');

insert into messageappDB.circle (circle_name,description,created_by)
values('studay', 'happy learning', 'shan@gmail.com');

select * from messageappDB.circle;

-------------------------------------------------------


insert into messageappDB.user_circle (user_id,circle_id,status)
values('shan@gmail.com', '1', 'Accepted');

insert into messageappDB.user_circle (user_id,circle_id,status)
values('sanvi@gmail.com', '2', 'Accepted');

insert into messageappDB.user_circle (user_id,circle_id,status)
values('pooja@gmail.com', '4', 'Rejected');

insert into messageappDB.user_circle (user_id,circle_id,status)
values('shan@gmail.com', '5', 'Accepted');

insert into messageappDB.user_circle (user_id,circle_id,status)
values('sanvi@gmail.com', '5', 'Rejected');

select * from messageappDB.user_circle;

----------------------------------------------------------------------------------

insert into messageappDB.message(sender_id, receiver_id, circle_id, messages, message_type)
values ('shan@gmail.com' , 'sanvi@gmail.com', '2', 'Hello good morning', 'T');

insert into messageappDB.message(sender_id, receiver_id, circle_id, messages, message_type)
values ('sanvi@gmail.com' , 'pooja@gmail.com', '2', 'Good Night.img', 'I');

insert into messageappDB.message(sender_id, receiver_id, circle_id, messages, message_type)
values ('rani@gmail.com' , 'shan@gmail.com', '5', 'wave', 'V');

insert into messageappDB.message(sender_id, receiver_id, circle_id, messages, message_type)
values ('pooja@gmail.com' , 'rani@gmail.com', '1', 'hello hi i am a text message', 'T');

insert into messageappDB.message(sender_id, receiver_id, circle_id, messages, message_type)
values ('pooja@gmail.com' , 'shan@gmail.com', '4', 'hello hi i am a text message', 'T');

select * from messageappDB.message;

-----------------------------------------------------------------------------------------------

select * from messageappDB.user_inbox;

**************************************************************************************************************************
question 3:
Fetch the row from User table based on Id and Password.
---------------------------------------------------------------------------------------------------------------------
Answer:
select * from messageappDB.user where user_id = 'pooja@gmail.com' and password = 'pooh123';

******************************************************************************************************************
Question 4:
Fetch all the rows from Circle table based on the field created_by.
--------------------------------------------------------------------------------------------------------------
Answer:
select * from messageappDB.circle where created_by = 'sanvi@gmail.com';

*************************************************************************************************************************************

Question 5:
Fetch all the Circles created after the particular Date.
-----------------------------------------------------------------------------------------------------------------
Answer:
select * from messageappDB.circle where date_of_creation > '2017-10-17 10:32:00';

************************************************************************************************************************

Question 6:
Fetch all the User Ids from UserCircle table subscribed to particular Circle.
--------------------------------------------------------------------------------------------------------------
Answer:
select user_id from messageappDB.user_circle where circle_id = '2';

*************************************************************************************************************

Question 7:
Write upDate query to unsubscribe to particular Circle for the given User Id.
----------------------------------------------------------------------------------------------------
Answer:
update messageappDB.user_circle set status = 'Rejected' WHERE Id = '1';

*********************************************************************************************************************************
Question 8:
Fetch all the Messages from the Messages table sent by a particular User.
---------------------------------------------------------------------------------------------------------
Answer:
select * from messageappDB.message where sender_id = 'pooja@gmail.com';

******************************************************************************************************************************************

Question 9:
Fetch all the Messages from the Messages table received by a particular User.
-----------------------------------------------------------------------------------------------------------------
Answer:
select * from messageappDB.message where receiver_id = 'pooja@gmail.com';

********************************************************************************************************************************

Question 10:
Fetch all the Messages from the Messages table sent/received by a particular User. (both the Messages)
--------------------------------------------------------------------------------------------------------------------
Answer:
select * from messageappDB.message where sender_id = 'pooja@gmail.com' or receiver_id = 'pooja@gmail.com';

**********************************************************************************************************************************
Question 11:
Write a query to send Message from particular User to another User(Use Message table - insert statement).
---------------------------------------------------------------------------------------------------------------------------
Answer:
insert into messageappDB.message(sender_id, receiver_id, circle_id, messages, message_type)
values ('shan@gmail.com' , 'rani@gmail.com', '4', 'Hello good evening', 'T');
*************************************************************************************************************************************

Question 12:
Write a query to send Message from particular User to particular Circle(Use Message table - insert statement)
---------------------------------------------------------------------------------------------------------------------------
Answer:
insert into messageappDB.message(sender_id, receiver_id, circle_id, messages, message_type)
values ('shan@gmail.com' , 'rani@gmail.com', '2', 'new message good evening', 'T');
*************************************************************************************************************************************
Question 13:
Write a query to delete particular Message which you received from User(User Inbox table - delete statement)
---------------------------------------------------------------------------------------------------------------------------
Answer:
delete from messageappDB.user_inbox 
where sender_id = 'shan@gmail.com' and receiver_id = 'rani@gmail.com' and messages = 'new message good evening';
*************************************************************************************************************************************
Question 14:
Write a query to delete particular Message which you received from particular Circle(User Inbox table - delete statement)
---------------------------------------------------------------------------------------------------------------------------
Answer:
delete from messageappDB.user_inbox 
where circle_id = '4' and receiver_id = 'rani@gmail.com' and messages = 'Hello good evening';
*************************************************************************************************************************************

